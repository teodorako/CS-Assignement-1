#TRAN - Transitions and Transversions by Teodora Kovacevic


import re

dataset = ">Rosalind_7432GATACGTGGGTGTTTCTGCGGGCCACCTATGACCTAAAACTAGGAAGTATGATAGTGAAACGAAAGCTACGTCGCAGGTGAAGCATTAGCTAATACGCCACGGCCTAGCTGAAAGAAGGAAGATCCGGGTAATTTAGACAGCTACACCATGCGAACCTTACGCTGGAGGTAATTTTTCCAGCTGGCTAGTCCTTCATCAGCCTACTCGCCGCATTTGCAGAAGCCAGACTTAGAGACTACGAGTCTTTCGTCGTCGACACGTCAGCAAGTATGTCACTAAACTCGCATACACTTAAATGGCTAGCCTACGCTCTCATGTCCCAGCTATGGATGTGATTGCATCTATGTGACTCATTTGCAGTTCCGTCTTGACGGAAGAGAATTCAAGTTTTGGCCCCGCCGCCATCACAGCAAATGAGCGATTCCCCACCAAATCTGATGCTATTTTTGCCACCGTGCGGCGTCAAGACTGTATCGCCGGTGACTAGCTAATACACTTTCCGATTATTGCTGCTAGGGTACTGGCCATACGGGTCAGTGTGCAAGAGGGTACAATTATGGAAACAGCCTACTTCGAGGCTTCTCGCCAATAGACGGGTTATTCGGCCGAGGCCTCATAAGTTCTCATTCCGGTAAGTCCCTACATATTTTAGTTAACTGTAGCGCGCTTGGGTGCCAAACCGAAGAAGATCGATAGTCAATATACCTTGCCACCCTTTCTTTCATATTAGAGTCCTTGTTTGTTGAAAATACAGTATTCTTCAATCATATGTGACTTTTAAAAGTCAATGTCTTAGGAAAGGGGGATTGAGCCCCGGGATCTGCCTAGGCTACTGTGCTCAACAAACAAGCGGTTGGCAGGTGCTCCGGGGCG>Rosalind_3346GATATGTAGGTAATGTGGCGAGCCACCTATGACCCAAAACCAAGACGGATGAAAATGAAACGTTGGCTATGTCGCAGTTCAATCAGTAACTAACCGACCGCAACCTCGTTGAAGGCAGTAATAGCCGGTTAACTCGGACAGGGACATCGTACGAACTCTGCCTTGGAGACAAATTTACCGGCGGACTAGTCTACTAACGGCCTGCCCGTCGCACTTCTGGGAGGCACCTTTATAGACTACAGGTCTTTCGTAGTCAACACGTCTACGAGCCTGCTACCGAATACGTCTACACCTAAGCGGTTAACCTACGTTCCCACGGTCCGACAAAGTATACGATTGTGTCTCCGAGTCGCATTGACAATCTTGTCTTGATGGAAGGGAACTCAATATTTGACTCTAGCGTTATCGCATCAAATCAGCGACTCCCTGCCGAATCTGAGGCAGCTTGTATCACCGTGCGGCGTCAAGACTGCATTATACCTGCCTTGCTAATATCCCTTTCAATTTCCATTGCCAGGCTACTGGCTATACTGGTCAGTCTGAAAGAGGGTGCAATTGCGGAAACGATCTGTTACGAAGTTTCTCGCGGGTTGACGGACTTTGCGACCGATGGTACATAAGCCCTCGTATTGGTCAATCCCTGTACGTTTGCGTTAACGGCGGTGCGCTTGCGTACTAAACCGAAGGAAACCGATAGCATATATACTCTGTTGCACTTTATTTCACACTCGAGTCCTGATTTGTTGATAACGCTGTACTCTTGAACCACATGTGACACCTCAAAACAGATGTTTTAGTACACGGGGAGTGACCCTCGGGATCTGCCTAGGCTATTGTGCTTCGCAAGCAAACGGTCAGCAACTGGTCTAAGACG"
sequences = re.findall(r'[ATGC]+', dataset)
names = re.findall(r'Rosalind_[0-9]+',dataset)

seq1 = sequences[0]
seq2 = sequences[1]

transitions = 0
transversion = 0

for i in range(0,len(seq1)):
    if seq1[i] != seq2[i]:
        if (seq1[i] =="A" and seq2[i] =="G") or (seq1[i] =="G" and seq2[i] =="A") or (seq1[i] =="C" and seq2[i] =="T") or (seq1[i] =="T" and seq2[i] =="C"):
            transitions+=1
        elif (seq1[i] =="A" and seq2[i] =="C") or (seq1[i] =="C" and seq2[i] =="A") or (seq1[i] =="A" and seq2[i] =="T") or (seq1[i] =="T" and seq2[i] =="A") or (seq1[i] =="G" and seq2[i] =="C") or (seq1[i] =="C" and seq2[i] =="G") or (seq1[i] =="G" and seq2[i] =="T") or (seq1[i] =="T" and seq2[i] =="G"):
            transversion+=1

print(transitions/transversion)
